#!/usr/bin/env ruby

require 'optparse'
require 'taglib'

VERSION = [0, 0, 0]

FIELDS = [
  ['l', 'album',   String],
  ['r', 'artist',  String],
  ['c', 'comment', String],
  ['g', 'genre',   String],
  ['t', 'title',   String],
  ['n', 'track',   Integer],
  ['y', 'year',    Integer],
]

actions = []
status = 0

options = OptionParser.new do |opts|
  opts.banner += " file ..."

  opts.separator ""
  opts.separator "Tag options:"

  FIELDS.each do |f|
    short = "-#{f[0]}#{f[1].upcase}"
    long = "--#{f[1]}=#{f[1].upcase}"
    opts.on(short, long, f[2], "Set #{f[1]} tag") do |x|
      actions << ->(r) { r.send("#{f[0]}=", x) }
    end
  end

  opts.separator ""
  opts.separator "If no tag options are given, file tags are printed instead."
  opts.separator ""
  opts.separator "Other options:"

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end

  opts.on_tail("--version", "Show version") do
    puts VERSION.join('.')
    exit
  end
end

begin
  options.parse!
rescue OptionParser::ParseError => err
  warn(err)
  exit(1)
end

if ARGV.empty?
  puts options
  exit(1)
end

def print_info(filename, tag)
  puts filename

  FIELDS.each do |f|
    value = tag.send(f[1])
    puts "#{f[1]}:#{' ' * (8 - f[1].size)}#{value}" if value && value != 0
  end

  puts
end

ARGV.each do |filename|
  TagLib::FileRef.open(filename) do |fileref|
    if fileref.null?
      warn("Could not open file: #{filename}")
      status = 2
    else
      tag = fileref.tag
      if actions.empty?
        print_info(filename, tag)
      else
        actions.each { |action| action.call(tag) } 
        fileref.save
      end
    end
  end
end

exit(status)
